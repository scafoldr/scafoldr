services:
  core:
    container_name: core
    image: scafoldr/core
    build:
      context: ./core
      target: app_dev
    ports:
      - "8000:8000"
    volumes:
      - ./core:/srv/www
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_API_MODEL=${OPENAI_API_MODEL}
    restart: unless-stopped

  web:
    container_name: web
    image: scafoldr/web
    build:
      context: ./web
      target: app_dev
    volumes:
      - ./web:/srv/www
    environment:
      - CORE_API_BASE_URL=${CORE_API_BASE_URL}
    restart: unless-stopped
    
  proxy:
    container_name: proxy
    image: scafoldr/proxy
    build:
      context: ./proxy
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./proxy/Caddyfile:/etc/caddy/Caddyfile
      - ./proxy/site:/srv
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - DOMAIN=${DOMAIN}
    restart: unless-stopped
  
  clickhouse:
    container_name: clickhouse
    image: clickhouse/clickhouse-server:24.12-alpine
    environment:
      CLICKHOUSE_USER: chuser
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_PASSWORD: chpassword
    ports:
      - "8123:8123"
    healthcheck:
      test: wget --spider --tries 1 http://chuser:chpassword@clickhouse:8123/ping
      start_period: 30s
      start_interval: 1s
      timeout: 1s

  # The TensorZero Python client *doesn't* require a separate gateway service.
  #
  # The gateway is only needed if you want to use the OpenAI Python client
  # or interact with TensorZero via its HTTP API (for other programming languages).
  #
  # The TensorZero UI also requires the gateway service.
  gateway:
    container_name: gateway
    image: tensorzero/gateway
    volumes:
      # Mount our config.toml file into the container
      - ./tensorzero/config.toml:/app/tensorzero/tensorzero.toml:ro

    command: --config-file /app/tensorzero/tensorzero.toml
    environment:
      TENSORZERO_CLICKHOUSE_URL: http://chuser:chpassword@clickhouse:8123/tensorzero
      OPENAI_API_KEY: ${OPENAI_API_KEY:?Environment variable OPENAI_API_KEY must be set.}
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      start_period: 1s
      start_interval: 1s
      timeout: 1s
    depends_on:
      clickhouse:
        condition: service_healthy

  ui:
    container_name: ui
    image: tensorzero/ui
    volumes:
      # Mount our tensorzero.toml file into the container
      - ./tensorzero/config.toml:/app/config/tensorzero.toml:ro

    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY:?Environment variable OPENAI_API_KEY must be set.}
      TENSORZERO_CLICKHOUSE_URL: http://chuser:chpassword@clickhouse:8123/tensorzero
      TENSORZERO_GATEWAY_URL: http://gateway:3000
    ports:
      - "4000:4000"
    depends_on:
      clickhouse:
        condition: service_healthy
      gateway:
        condition: service_healthy

volumes:
  caddy_data:
  caddy_config:
